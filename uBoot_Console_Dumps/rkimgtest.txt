=> rkimgtest
"Synchronous Abort" handler, esr 0x96000010
* Relocate offset = 000000001dbef000
* ELR(PC)    =   0000000000283d94
* LR         =   0000000000283df4
* SP         =   0000000011de4230

* ESR_EL2    =   0000000096000010
        EC[31:26] == 100101, Exception from a Data abort, from current exception level
        IL[25] == 1, 32-bit instruction trapped

* DAIF       =   00000000000003c0
        D[9] == 1, DBG masked
        A[8] == 1, ABORT masked
        I[7] == 1, IRQ masked
        F[6] == 1, FIQ masked

* SPSR_EL2   =   0000000060000349
        D[9] == 1, DBG masked
        A[8] == 1, ABORT masked
        I[7] == 0, IRQ not masked
        F[6] == 1, FIQ masked
        M[4] == 0, Exception taken from AArch64
        M[3:0] == 1001, EL2h

* SCTLR_EL2  =   0000000030c51835
        I[12] == 1, Icaches enabled
        C[2] == 1, Dcache enabled
        M[0] == 1, MMU enabled

* HCR_EL2    =   000000000800003a
* VBAR_EL2   =   000000001ddef800
* TTBR0_EL2  =   000000001fff0000

x0 : 0000000000000020 x1 : 0000000000000010
x2 : 0000000000000010 x3 : 0000000011e36de0
x4 : 000000001ddf5e48 x5 : 0000000000000000
x6 : 0000000011e267c0 x7 : 0000000000000000
x8 : 0000000011e36e70 x9 : 0000000000000008
x10: 00000000ffffffd0 x11: 0000000008300000
x12: 0000000000011c98 x13: 0000000011de45bc
x14: 0000000008300000 x15: 0000000000000002
x16: 0000000000000001 x17: 0000000008318004
x18: 0000000011de6d10 x19: 0000000000000000
x20: 0000000011e36de0 x21: 0000000000000000
x22: 0000000000000001 x23: 000000001deb8f44
x24: 0000000000000000 x25: 0000000000000000
x26: 0000000000000000 x27: 0000000000000000
x28: 0000000011e36e20 x29: 0000000011de4410

SP:
11de4230:  00000000 00000000 00000000 00000000
11de4240:  00000000 00000000 1de94c18 00000000
11de4250:  00000000 00000000 00000000 00000000
11de4260:  1de94c5f 00000000 1de94c85 00000000
11de4270:  1de94cd2 00000000 1de94d1f 00000000
11de4280:  1de94d5f 00000000 1de94d9f 00000000
11de4290:  1de94ddc 00000000 00000000 00000000
11de42a0:  00000000 00000000 1de94e19 00000000
11de42b0:  11de4410 00000000 1ddefa0c 00000000
11de42c0:  00000000 00000000 1de4d0c0 00000000
11de42d0:  1fff0000 00000000 0800003a 00000000
11de42e0:  30c51835 00000000 11de4230 00000000
11de42f0:  60000349 00000000 1ddef800 00000000
11de4300:  000003c0 00000000 96000010 00000000
11de4310:  1de72d94 00000000 00000020 00000000
11de4320:  00000010 00000000 00000010 00000000


Call trace:
  PC:   [< 00283d94 >]
  LR:   [< 00283df4 >]

Stack:
        [< 00283d94 >]
        [< 00206e64 >]
        [< 00223840 >]
        [< 002130c4 >]
        [< 00213264 >]
        [< 002137a8 >]
        [< 00222f18 >]
        [< 002113e0 >]
        [< 00213ea0 >]
        [< 00272f5c >]
        [< 0021402c >]
        [< 00201b2c >]

Copy above stack info to a file(eg. dump.txt), and
execute command in your U-Boot project: ./scripts/stacktrace.sh dump.txt